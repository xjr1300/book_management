# Generated by Django 4.2 on 2023-04-29 10:28

import accounts.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Eメールアドレス",
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="名前")),
                ("is_active", models.BooleanField(default=True, verbose_name="アクティブ")),
                ("is_staff", models.BooleanField(default=False, verbose_name="スタッフ")),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="登録日時"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "ユーザー",
                "verbose_name_plural": "ユーザー",
                "db_table": "users",
                "ordering": ("email",),
            },
            managers=[
                ("objects", accounts.models.UserManager()),
            ],
        ),
    ]
